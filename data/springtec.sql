-- MySQL Script generated by MySQL Workbench
-- Thu Nov 23 03:04:28 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema db_springtec
-- -----------------------------------------------------
-- DROP SCHEMA IF EXISTS db_springtec ;

-- -----------------------------------------------------
-- Schema db_springtec
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS db_springtec DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE db_springtec ;

-- -----------------------------------------------------
-- Table db_springtec.role
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.role ;

CREATE TABLE IF NOT EXISTS db_springtec.role (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(45) NOT NULL,
  PRIMARY KEY (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.user
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.user ;

CREATE TABLE IF NOT EXISTS db_springtec.user (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  role_id INT UNSIGNED NOT NULL,
  email VARCHAR(45) NOT NULL,
  password VARCHAR(240) NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id),
  UNIQUE INDEX email_UNIQUE (email ASC) VISIBLE,
  INDEX fk_User_Role1_idx (role_id ASC) VISIBLE,
  CONSTRAINT fk_User_Role1
    FOREIGN KEY (role_id)
    REFERENCES db_springtec.role (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.help_desk
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.help_desk ;

CREATE TABLE IF NOT EXISTS db_springtec.help_desk (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  user_id INT UNSIGNED NOT NULL,
  name VARCHAR(45) NOT NULL,
  father_lastname VARCHAR(45) NOT NULL,
  mother_lastname VARCHAR(45) NOT NULL,
  dni CHAR(8) NOT NULL,
  birth_date DATE NOT NULL,
  PRIMARY KEY (id),
  UNIQUE INDEX dni_UNIQUE (dni ASC) VISIBLE,
  INDEX fk_Tecnico_User_idx (user_id ASC) VISIBLE,
  CONSTRAINT fk_Tecnico_User1
    FOREIGN KEY (user_id)
    REFERENCES db_springtec.user (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.client
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.client ;

CREATE TABLE IF NOT EXISTS db_springtec.client (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  user_id INT UNSIGNED NOT NULL,
  name VARCHAR(45) NOT NULL,
  father_lastname VARCHAR(45) NOT NULL,
  mother_lastname VARCHAR(45) NOT NULL,
  dni CHAR(8) NOT NULL,
  birth_date DATE NOT NULL,
  PRIMARY KEY (id),
  UNIQUE INDEX dni_UNIQUE (dni ASC) VISIBLE,
  INDEX fk_Tecnico_User_idx (user_id ASC) VISIBLE,
  CONSTRAINT fk_Tecnico_User0
    FOREIGN KEY (user_id)
    REFERENCES db_springtec.user (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.ticket_support
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.ticket_support ;

CREATE TABLE IF NOT EXISTS db_springtec.ticket_support (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  client_id INT UNSIGNED NOT NULL,
  issue VARCHAR(45) NOT NULL,
  description VARCHAR(300) NOT NULL,
  date DATE NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id),
  INDEX fk_Ticket_Soporte_Client1_idx (client_id ASC) VISIBLE,
  CONSTRAINT fk_Ticket_Soporte_Client1
    FOREIGN KEY (client_id)
    REFERENCES db_springtec.client (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.answer_support
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.answer_support ;

CREATE TABLE IF NOT EXISTS db_springtec.answer_support (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  ticket_support_id INT UNSIGNED NOT NULL,
  help_desk_id INT UNSIGNED NOT NULL,
  title VARCHAR(45) NOT NULL,
  answer VARCHAR(300) NOT NULL,
  date DATE NOT NULL,
  PRIMARY KEY (id),
  INDEX fk_answer_support_Ticket_Soporte1_idx (ticket_support_id ASC) VISIBLE,
  INDEX fk_answer_support_Help_Desk1_idx (help_desk_id ASC) VISIBLE,
  CONSTRAINT fk_answer_support_Help_Desk1
    FOREIGN KEY (help_desk_id)
    REFERENCES db_springtec.help_desk (id),
  CONSTRAINT fk_answer_support_Ticket_Soporte1
    FOREIGN KEY (ticket_support_id)
    REFERENCES db_springtec.ticket_support (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.availability
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.availability ;

CREATE TABLE IF NOT EXISTS db_springtec.availability (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(45) NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id),
  UNIQUE INDEX name_UNIQUE (name ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.category_services
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.category_services ;

CREATE TABLE IF NOT EXISTS db_springtec.category_services (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(45) NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id),
  UNIQUE INDEX name_UNIQUE (name ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.currency_type
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.currency_type ;

CREATE TABLE IF NOT EXISTS db_springtec.currency_type (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  symbol CHAR(4) NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id),
  UNIQUE INDEX symbol_UNIQUE (symbol ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.technical
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.technical ;

CREATE TABLE IF NOT EXISTS db_springtec.technical (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  user_id INT UNSIGNED NOT NULL,
  name VARCHAR(45) NOT NULL,
  father_lastname VARCHAR(45) NOT NULL,
  mother_lastname VARCHAR(45) NOT NULL,
  dni CHAR(8) NOT NULL,
  birth_date DATE NOT NULL,
  lat DOUBLE NULL,
  lng DOUBLE NULL,
  working_status CHAR(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (id),
  UNIQUE INDEX dni_UNIQUE (dni ASC) VISIBLE,
  INDEX fk_Tecnico_User_idx (user_id ASC) VISIBLE,
  CONSTRAINT fk_Tecnico_User
    FOREIGN KEY (user_id)
    REFERENCES db_springtec.user (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.experience
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.experience ;

CREATE TABLE IF NOT EXISTS db_springtec.experience (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(60) NOT NULL,
  PRIMARY KEY (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.profession
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.profession ;

CREATE TABLE IF NOT EXISTS db_springtec.profession (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(45) NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.profession_availability
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.profession_availability ;

CREATE TABLE IF NOT EXISTS db_springtec.profession_availability (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  technical_id INT UNSIGNED NOT NULL,
  profession_id INT UNSIGNED NOT NULL,
  availability_id INT UNSIGNED NOT NULL,
  experience_id INT UNSIGNED NOT NULL,
  PRIMARY KEY (id),
  INDEX fk_technical_has_profession_profesion1_idx (profession_id ASC) VISIBLE,
  INDEX fk_technical_has_profession_Tecnico1_idx (technical_id ASC) VISIBLE,
  INDEX fk_technical_has_profession_Experience1_idx (experience_id ASC) VISIBLE,
  INDEX fk_technical_has_profession_availability1_idx (availability_id ASC) VISIBLE,
  CONSTRAINT fk_technical_has_profession_Experience1
    FOREIGN KEY (experience_id)
    REFERENCES db_springtec.experience (id),
  CONSTRAINT fk_technical_has_profession_profesion1
    FOREIGN KEY (profession_id)
    REFERENCES db_springtec.profession (id),
  CONSTRAINT fk_technical_has_profession_Tecnico1
    FOREIGN KEY (technical_id)
    REFERENCES db_springtec.technical (id),
  CONSTRAINT fk_technical_has_profession_availability1
    FOREIGN KEY (availability_id)
    REFERENCES db_springtec.availability (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;




-- -----------------------------------------------------
-- Table db_springtec.services
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.services ;

CREATE TABLE IF NOT EXISTS db_springtec.services (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  category_services_id INT UNSIGNED NOT NULL,
  currency_type_id INT UNSIGNED NOT NULL,
  name VARCHAR(45) NOT NULL,
  description VARCHAR(255) NULL DEFAULT NULL,
  price DOUBLE(10,2) UNSIGNED NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id),
  INDEX fk_services_Category_services1_idx (category_services_id ASC) VISIBLE,
  INDEX fk_services_currency_type_idx (currency_type_id ASC) VISIBLE,
  CONSTRAINT fk_services_Category_services1
    FOREIGN KEY (category_services_id)
    REFERENCES db_springtec.category_services (id),
  CONSTRAINT fk_services_currency_type1
    FOREIGN KEY (currency_type_id)
    REFERENCES db_springtec.currency_type (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.service_type_availability
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.service_type_availability ;

CREATE TABLE IF NOT EXISTS db_springtec.service_type_availability (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  profession_availability_id INT UNSIGNED NOT NULL,
  services_id INT UNSIGNED NOT NULL,
  PRIMARY KEY (id),
  INDEX fk_service_type_availability_profession_availability1_idx (profession_availability_id ASC) VISIBLE,
  INDEX fk_service_type_availability_services1_idx (services_id ASC) VISIBLE,
  CONSTRAINT fk_service_type_availability_profession_availability1
    FOREIGN KEY (profession_availability_id)
    REFERENCES db_springtec.profession_availability (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_service_type_availability_services1
    FOREIGN KEY (services_id)
    REFERENCES db_springtec.services (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table db_springtec.direct_request
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.direct_request ;

CREATE TABLE IF NOT EXISTS db_springtec.direct_request (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  profession_availability_id INT UNSIGNED NOT NULL,
  client_id INT UNSIGNED NOT NULL,
  service_type_availability_id INT UNSIGNED NULL,
  latitude DOUBLE NOT NULL,
  longitude DOUBLE NOT NULL,
  title VARCHAR(80) NOT NULL,
  description VARCHAR(255) NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id),
  INDEX fk_direct_request_profession_availability1_idx (profession_availability_id ASC) VISIBLE,
  INDEX fk_direct_request_client1_idx (client_id ASC) VISIBLE,
  INDEX fk_direct_request_service_type_availability1_idx (service_type_availability_id ASC) VISIBLE,
  CONSTRAINT fk_direct_request_client1
    FOREIGN KEY (client_id)
    REFERENCES db_springtec.client (id),
  CONSTRAINT fk_direct_request_profession_availability1
    FOREIGN KEY (profession_availability_id)
    REFERENCES db_springtec.profession_availability (id),
  CONSTRAINT fk_direct_request_service_type_availability1
    FOREIGN KEY (service_type_availability_id)
    REFERENCES db_springtec.service_type_availability (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.image_upload
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.image_upload ;

CREATE TABLE IF NOT EXISTS db_springtec.image_upload (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  direct_request_id INT UNSIGNED NOT NULL,
  original_name VARCHAR(100) NOT NULL,
  extension_name VARCHAR(20) NOT NULL,
  content_type VARCHAR(20) NOT NULL,
  fake_name VARCHAR(100) NOT NULL,
  fake_extension_name VARCHAR(20) NOT NULL,
  PRIMARY KEY (id),
  INDEX fk_img_firebase_direct_request_id_idx (direct_request_id ASC) VISIBLE,
  CONSTRAINT fk_img_firebase_direct_request_id1
    FOREIGN KEY (direct_request_id)
    REFERENCES db_springtec.direct_request (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table db_springtec.invoice
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.invoice ;

CREATE TABLE IF NOT EXISTS db_springtec.invoice (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  direct_request_id INT UNSIGNED NOT NULL,
  task VARCHAR(100) NOT NULL,
  description TEXT NOT NULL,
  price DOUBLE(10,2) UNSIGNED NOT NULL,
  date DATE NOT NULL,
  hour TIME NOT NULL,
  state CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (id),
  INDEX fk_invoice_direct_request_id_idx (direct_request_id ASC) VISIBLE,
  CONSTRAINT fk_invoice_direct_request_id1
    FOREIGN KEY (direct_request_id)
    REFERENCES db_springtec.direct_request (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;




-- -----------------------------------------------------
-- Table db_springtec.Profession_local
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.Profession_local ;

CREATE TABLE IF NOT EXISTS db_springtec.Profession_local (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  profession_availability_id INT UNSIGNED NOT NULL,
  lat DOUBLE NULL,
  lng DOUBLE NULL,
  state CHAR(1) DEFAULT '1' NOT NULL,
  PRIMARY KEY (id),
  INDEX fk_Profession_local_profession_availability1_idx (profession_availability_id ASC) VISIBLE,
  CONSTRAINT fk_Profession_local_profession_availability1
    FOREIGN KEY (profession_availability_id)
    REFERENCES db_springtec.profession_availability (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table db_springtec.image_service
-- -----------------------------------------------------
DROP TABLE IF EXISTS db_springtec.image_service ;

CREATE TABLE IF NOT EXISTS db_springtec.image_service (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  services_id INT UNSIGNED NOT NULL,
  original_name VARCHAR(100) NOT NULL,
  extension_name VARCHAR(20) NOT NULL,
  content_type VARCHAR(20) NOT NULL,
  fake_name VARCHAR(100) NOT NULL,
  fake_extension_name VARCHAR(20) NOT NULL,
  PRIMARY KEY (id),
  INDEX fk_image_service_services1_idx (services_id ASC) VISIBLE,
  CONSTRAINT fk_image_service_services1
    FOREIGN KEY (services_id)
    REFERENCES db_springtec.services (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- ------- AVAILABILITY ----------- --
-- -------------------------------- --

INSERT INTO availability(name) VALUES ('A domicilio');
INSERT INTO availability(name) VALUES ('En taller');

-- ------- PROFESSION ----------- --
-- -------------------------------- --

INSERT INTO profession(name) VALUES ('Mecánico');
INSERT INTO profession(name) VALUES ('Plomero');
INSERT INTO profession(name) VALUES ('Electricista');
INSERT INTO profession(name) VALUES ('Ingeniero de Software');
INSERT INTO profession(name) VALUES ('Diseñador Gráfico');


-- ------- PROFESSION ----------- --
-- -------------------------------- --

INSERT INTO role(name) VALUES ('CLIENT');
INSERT INTO role(name) VALUES ('TECHNICAL');
INSERT INTO role(name) VALUES ('HELPDESK');

-- ------- EXPERIENCE ----------- --
-- -------------------------------- --

INSERT INTO experience(name) VALUES ('Estudiante Universitario');
INSERT INTO experience(name) VALUES ('No titulado');
INSERT INTO experience(name) VALUES ('Técnico');
INSERT INTO experience(name) VALUES ('Ingeniero');

-- ------- CATEGORY SERVICE ----------- --
-- -------------------------------- --

INSERT INTO category_services(name) VALUES ('Limpieza');
INSERT INTO category_services(name) VALUES ('Revisión');
INSERT INTO category_services(name) VALUES ('Mantenimiento');
INSERT INTO category_services(name) VALUES ('Reparación');
INSERT INTO category_services(name) VALUES ('Instalación');

-- ------- CURRENCY TYPE ----------- --
-- -------------------------------- --

INSERT INTO currency_type(symbol) VALUES ('S/');
INSERT INTO currency_type(symbol) VALUES ('$');
INSERT INTO currency_type(symbol) VALUES ('€');






-- CALL ExistsAvailabilityProfessionExperience(3,7,5);
DELIMITER //
CREATE PROCEDURE ExistsAvailabilityProfessionExperience(
    IN p_availability_id INT,
    IN p_profession_id INT,
    IN p_experience_id INT
)
BEGIN
    DECLARE messages VARCHAR(255);
	SET messages = '';
    IF (
        SELECT COUNT(*)
        FROM availability
        WHERE id = p_availability_id
    ) = 0 THEN
        SET messages = CONCAT(messages,'La disponibilidad con id = ', p_availability_id, ' no existe; ');
    END IF;

    IF (
        SELECT COUNT(*)
        FROM profession
        WHERE id = p_profession_id
    ) = 0 THEN
        SET messages = CONCAT(messages, 'La profesión con id = ', p_profession_id, ' no existe; ');
    END IF;

    IF (
        SELECT COUNT(*)
        FROM experience
        WHERE id = p_experience_id
    ) = 0 THEN
        SET messages = CONCAT(messages, 'La experiencia con id = ', p_experience_id, ' no existe; ');
    END IF;
    
    SELECT messages AS result;
END //
DELIMITER ;


DELIMITER //

CREATE PROCEDURE UpdateTechnicalLocation(
    IN p_technicalId INT,
    IN p_latitude DECIMAL(10, 6),
    IN p_longitude DECIMAL(10, 6),
    IN p_workingStatus CHAR(1)
)
BEGIN
    UPDATE technical
    SET lat = p_latitude, lng = p_longitude
    WHERE id = p_technicalId AND working_status = p_workingStatus;
	
    SELECT ROW_COUNT() AS isUpdated;
END //

DELIMITER ;


DELIMITER //
CREATE PROCEDURE FilterTechnicalsAvailabilityNoInLocal(
    IN p_availabilityId INT,
	IN p_professionId INT,
    IN p_rango INT,
    IN p_latitude DECIMAL(10, 6),
    IN p_longitude DECIMAL(10, 6),
    IN p_workingStatus CHAR(1)
)
BEGIN
    SELECT
        t.*
    FROM
        technical t
    INNER JOIN
        profession_availability pa ON t.id = pa.technical_id
    WHERE
        pa.availability_id = p_availabilityId
        AND pa.profession_id = p_professionId
        AND t.working_status = p_workingStatus  -- Consideramos solo técnicos activos
        AND (
            6371 * ACOS(
                COS(RADIANS(p_latitude)) * COS(RADIANS(t.lat)) * COS(RADIANS(p_longitude) - RADIANS(t.lng))
                + SIN(RADIANS(p_latitude)) * SIN(RADIANS(t.lat))
            )
        ) <= p_rango;
END //

DELIMITER ;

DELIMITER //
CREATE PROCEDURE FilterTechnicalsAvailabilityIsLocal(
	IN p_availabilityId INT,
    IN p_professionId INT,
    IN p_rango INT,
    IN p_latitude DECIMAL(10, 6),
    IN p_longitude DECIMAL(10, 6),
    IN p_state_local INT
)
BEGIN

    SELECT DISTINCT
        t.*
    FROM
        technical t
    INNER JOIN
        profession_availability pa ON t.id = pa.technical_id
    LEFT JOIN
        profession_local pl ON pa.id = pl.profession_availability_id
    WHERE
        pa.profession_id = p_professionId
        AND pa.availability_id = p_availabilityId
        AND pl.state = p_state_local
        AND (
            6371 * ACOS(
                COS(RADIANS(p_latitude)) * COS(RADIANS(COALESCE(pl.lat, t.lat))) * COS(RADIANS(p_longitude) - RADIANS(COALESCE(pl.lng, t.lng)))
                + SIN(RADIANS(p_latitude)) * SIN(RADIANS(COALESCE(pl.lat, t.lat)))
            )
        ) <= p_rango;
END //

DELIMITER ;

DELIMITER //
CREATE PROCEDURE FilterNearbyAllTechnicals(
    IN p_professionId INT,
    IN p_rango INT,
    IN p_latitude DECIMAL(10, 6),
    IN p_longitude DECIMAL(10, 6),
    IN p_workingStatus CHAR(1)
)
BEGIN

    SELECT DISTINCT
        t.*
    FROM
        technical t
    INNER JOIN
        profession_availability pa ON t.id = pa.technical_id
    LEFT JOIN
        profession_local pl ON pa.id = pl.profession_availability_id
    WHERE
        pa.profession_id = p_professionId
        AND t.working_status = p_workingStatus
        AND (
            6371 * ACOS(
                COS(RADIANS(p_latitude)) * COS(RADIANS(COALESCE(pl.lat, t.lat))) * COS(RADIANS(p_longitude) - RADIANS(COALESCE(pl.lng, t.lng)))
                + SIN(RADIANS(p_latitude)) * SIN(RADIANS(COALESCE(pl.lat, t.lat)))
            )
        ) <= p_rango;
END //
DELIMITER ;
